{"version":3,"file":"m3.modern.mjs","sources":["../src/lib/tools/colors.js","../src/lib/builders/colorsBuilder.js","../src/lib/builders/ThemeBuilder.js","../src/lib/styles/colors/backgrounds-color.js","../src/lib/styles/colors/borders-color.js","../src/lib/styles/colors/fonts-color.js"],"sourcesContent":["\nconst hslValues = (hsl) => {\n    hsl=hsl.replace(\"deg\",\"\");\n    let sep = hsl.indexOf(\",\") > -1 ? \",\" : \" \";\n    hsl = hsl.substr(hsl.startsWith(\"hsla\")?5:4).split(\")\")[0].split(sep);\n  console.log(hsl);\n    let h = hsl[0],\n        s = hsl[1].substr(0, hsl[1].length - 1),\n        l = hsl[2].substr(0, hsl[2].length - 1),\n        a = hsl[3] || 1;\n        console.log(h,s,l,a);\n    return { h, s, l, a };\n};\nconst hslString = (h, s, l, a) => a || a === 0 ? `hsla(${h},${s}%,${l}%,${a})` : `hsl(${h},${s}%,${l}%)`;\nconst hslObject = (h, s, l, a) => ({\n    string: hslString(h, s, l, a),\n    values: { h, s, l, a }\n});\n\nconst rgbValues = (rgb) => {\n    let r = 0, g = 0, b = 0;\n    let sep = rgb.indexOf(\",\") > -1 ? \",\" : \" \";\n    rgb = rgb.substr(rgb.startsWith(\"rgba\")?5:4).split(\")\")[0].split(sep);\n    const length = rgb.length;\n    const percent = rgb.includes(\"%\");\n    if (percent) {\n        r = rgb[0].replace(\"%\", \"\") / 100;\n        g = rgb[1].replace(\"%\", \"\") / 100;\n        b = rgb[2].replace(\"%\", \"\") / 100;\n    } else {\n        r = parseInt(rgb[0]);\n        g = parseInt(rgb[1]);\n        b = parseInt(rgb[2]);\n    }\n    let a = length > 3 ? length === 4 ? rgb[3] : rgb[4] : null;\n    if (a && percent) a = a.replace(\"%\", \"\") / 100;\n    return { r, g, b, a }\n};\nconst hexValues = (hex) => {\n    hex = hex.replace(\"#\", \"\");\n    const length = hex.length;\n    const value = length > 4 ? hex.match(/.{1,2}/g) : hex.match(/.{1,2}/g);\n    let r, g, b, a = null;\n    const int = (from, position) => parseInt(from[position], 16);\n    r = int(value, 0);\n    g = int(value, 1);\n    b = int(value, 2);\n    a = length % 4 === 0 ? (int(value, 3) / 255).toFixed(3) : null;\n    return { r, g, b, a }\n};\n\nconst HSLFromRGBValues = (r, g, b,a) => {\n    // Make r, g, and b fractions of 1\n    r /= 255;\n    g /= 255;\n    b /= 255;\n\n    // Find greatest and smallest channel values\n    let cmin = Math.min(r, g, b),\n        cmax = Math.max(r, g, b),\n        delta = cmax - cmin,\n        h = 0,\n        s = 0,\n        l = 0;\n\n    // Calculate hue\n    // No difference\n    if (delta == 0)\n        h = 0;\n    // Red is max\n    else if (cmax == r)\n        h = ((g - b) / delta) % 6;\n    // Green is max\n    else if (cmax == g)\n        h = (b - r) / delta + 2;\n    // Blue is max\n    else\n        h = (r - g) / delta + 4;\n\n    h = Math.round(h * 60);\n\n    // Make negative hues positive behind 360Â°\n    if (h < 0)\n        h += 360;\n      // Calculate lightness\n  l = (cmax + cmin) / 2;\n\n  // Calculate saturation\n  s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n    \n  // Multiply l and s by 100\n  s = +(s * 100).toFixed(1);\n  l = +(l * 100).toFixed(1);   \n  return { h, s, l, a }; \n}\n\nconst rgbToHsl = (rgb) => {\n    const { r, g, b, a } = rgbValues(rgb);\n    console.log(r,g,b,a);\n    const { h, s, l } = HSLFromRGBValues(r, g, b)\n    console.log(h,s,l);\n    return hslObject(h, s, l, a);\n};\nconst hexToRgb = (hex) => {\n    const { r, g, b, a } = hexValues(hex);\n    return {\n        string: a ? `rgba(${r},${g},${b},${a})` : `rgb(${r},${g},${b})`,\n        values: { r, g, b, a }\n    }\n};\nconst hexToHsl = (hex) => {\n    const { r, g, b, a } = hexValues(hex);\n    console.log(r,g,b,a);\n    const { h, s, l } = HSLFromRGBValues(r, g, b);\n    console.log(h,s,l);\n    return hslObject(h, s, l, a)\n};\n\n\nconst HSLCACHE={};\n\nexport const getAllHsls = (color) => {\n\n    let { h, s, l, a } = color.startsWith(\"rgb\") ? rgbToHsl(color).values : color.startsWith(\"#\") ? hexToHsl(color).values : color.startsWith(\"hsl\") ? hslValues(color) : {};\n    if (!h && h!==0) throw new Error(\"The color value is not recognized!\");\n    const hsls = [];\n  \n    for (let index = 0; index <= 100; index++) {\n        hsls.push({\n            string: hslString(h, s,index,a),\n            values: { h, s, l: index, a },\n        });\n\n    }\n    return hsls\n};\n\n\nexport const getColorWithLight=(color,light)=>{\n    if(!HSLCACHE[color]) HSLCACHE[color]=getAllHsls(color);\n    return HSLCACHE[color][light];\n}","\nimport { getAllHsls } from \"../tools/colors\"\nconst LEVELS = {\n    KEY_COLOR: {\n        base: {\n            light: 40,\n            dark: 80\n        },\n        on: {\n            light: 100,\n            dark: 20\n        },\n        container: {\n\n            base: {\n                light: 90,\n                dark: 30\n            },\n            on: {\n                light: 10,\n                dark: 90\n            }\n        },\n    },\n    SURFACE: {\n        base: {\n            dark: 6,\n            light: 98\n        },\n        dim: {\n            dark: 6,\n            light: 87\n        },\n        bright: {\n            dark: 24,\n            light: 98\n        },\n\n        on: {\n            base: {\n                dark: 90,\n                light: 10\n            },\n            variant: {\n                dark: 80,\n                light: 30\n            }\n        },\n        outline: {\n            base: {\n                dark: 60,\n                light: 50\n            },\n\n            variant: {\n                dark: 30,\n                light: 80\n            }\n        },\n        container: {\n            base: {\n                dark: 12,\n                light: 94\n            },\n            lowest: {\n                dark: 4,\n                light: 100\n            },\n            low: {\n                dark: 10,\n                light: 96\n            },\n            high: {\n                dark: 17,\n                light: 92\n            },\n            highest: {\n                dark: 22,\n                light: 90\n            }\n        }\n    }\n}\nconst keyColor = (color, level) => {\n    const lights = getAllHsls(color);\n    return {\n        base: {\n            dark: lights[LEVELS.KEY_COLOR.base.dark],\n            light: lights[LEVELS.KEY_COLOR.base.light],\n        },\n        on: {\n            dark: lights[LEVELS.KEY_COLOR.on.dark],\n            light: lights[LEVELS.KEY_COLOR.on.light],\n        },\n        container: {\n            base: {\n                dark: lights[LEVELS.KEY_COLOR.container.base.dark],\n                light: lights[LEVELS.KEY_COLOR.container.base.light],\n            },\n            on: {\n                light: lights[LEVELS.KEY_COLOR.container.on.light],\n                dark: lights[LEVELS.KEY_COLOR.container.on.dark],\n            }\n        }\n    }\n}\nconst NeutralColor = (color,variant) => {\n    const lights = getAllHsls(color);\n    const variantLights = getAllHsls(variant||color);\n    return {\n        base: {\n            dark: lights[LEVELS.SURFACE.base.dark],\n            light: lights[LEVELS.SURFACE.base.light],\n        },\n        dim: {\n            dark: lights[LEVELS.SURFACE.dim.dark],\n            light: lights[LEVELS.SURFACE.dim.light],\n        },\n        bright: {\n            dark: lights[LEVELS.SURFACE.bright.dark],\n            light: lights[LEVELS.SURFACE.bright.light],\n        },\n        on: {\n            base: {\n                dark: lights[LEVELS.SURFACE.on.base.dark],\n                light: lights[LEVELS.SURFACE.on.base.light],\n            },\n            variant: {\n                dark: variantLights[LEVELS.SURFACE.on.variant.dark],\n                light: variantLights[LEVELS.SURFACE.on.variant.light],\n            },\n        },\n        outline: {\n            base: {\n                dark: lights[LEVELS.SURFACE.outline.base.dark],\n                light: lights[LEVELS.SURFACE.outline.base.light],\n            },\n            variant: {\n                dark: variantLights[LEVELS.SURFACE.outline.variant.dark],\n                light: variantLights[LEVELS.SURFACE.outline.variant.light],\n            },\n        },\n        container: {\n            base: {\n                dark: lights[LEVELS.SURFACE.container.base.dark],\n                light: lights[LEVELS.SURFACE.container.base.light],\n            },\n            lowest: {\n                dark: lights[LEVELS.SURFACE.container.lowest.dark],\n                light: lights[LEVELS.SURFACE.container.lowest.light],\n            },\n            low: {\n                dark: lights[LEVELS.SURFACE.container.low.dark],\n                light: lights[LEVELS.SURFACE.container.low.light],\n            },\n            high: {\n                dark: lights[LEVELS.SURFACE.container.high.dark],\n                light: lights[LEVELS.SURFACE.container.high.light],\n            },\n            highest: {\n                dark: lights[LEVELS.SURFACE.container.highest.dark],\n                light: lights[LEVELS.SURFACE.container.highest.light],\n            },\n        }\n    }\n}\n\nconst BuildThemeColors = ({theme='light', primary, secondary, tertiary, error, surface,surfaceVariant }) => {\n\n    const PRIMARY=primary&&keyColor(primary);\n    const SECONDARY=secondary&&keyColor(secondary);\n    const TERTIARY=tertiary&&keyColor(tertiary);\n    const ERROR=error&&keyColor(error);\n    const SURFACE=surface&&NeutralColor(surface,surfaceVariant);\n    \n    return {\n        primaryBg:PRIMARY&&PRIMARY.base[theme].string,\n        primaryColor:PRIMARY&&PRIMARY.on[theme].string,\n        primaryContainerBg:PRIMARY&&PRIMARY.container.base[theme].string,\n        primaryContainerColor:PRIMARY&&PRIMARY.container.on[theme].string,\n        secoondaryBg:SECONDARY&&SECONDARY.base[theme].string,\n        secoondaryColor:SECONDARY&&SECONDARY.on[theme].string,\n        secoondaryContainerBg:SECONDARY&&SECONDARY.container.base[theme].string,\n        secoondaryContainerColor:SECONDARY&&SECONDARY.container.on[theme].string,\n        tertiaryBg:TERTIARY&&TERTIARY.base[theme].string,\n        tertiaryColor:TERTIARY&&TERTIARY.on[theme].string,\n        tertiaryContainerBg:TERTIARY&&TERTIARY.container.base[theme].string,\n        tertiaryContainerColor:TERTIARY&&TERTIARY.container.on[theme].string,\n        ErrorBg:ERROR&&ERROR.base[theme].string,\n        ErrorColor:ERROR&&ERROR.on[theme].string,\n        ErrorContainerBg:ERROR&&ERROR.container.base[theme].string,\n        ErrorContainerColor:ERROR&&ERROR.container.on[theme].string,\n\n        surfaceBg:SURFACE&&SURFACE.base[theme].string,\n        surfaceDimBg:SURFACE&&SURFACE.dim[theme].string,\n        surfaceBrighBg:SURFACE&&SURFACE.bright[theme].string,\n\n        surfaceColor:SURFACE&&SURFACE.on.base[theme].string,\n        surfaceColorVariant:SURFACE&&SURFACE.on.variant[theme].string,\n\n        surfaceBorderColor:SURFACE&&SURFACE.outline.base[theme].string,\n        surfaceBorderColorVariant:SURFACE&&SURFACE.outline.variant[theme].string,\n\n        surfaceContainerBg:SURFACE&&SURFACE.container.base[theme].string,\n        surfaceContainerLowestBg:SURFACE&&SURFACE.container.lowest[theme].string,\n        surfaceContainerLowBg:SURFACE&&SURFACE.container.low[theme].string,\n        surfaceContainerHighBg:SURFACE&&SURFACE.container.high[theme].string,\n        surfaceContainerHighestBg:SURFACE&&SURFACE.container.highest[theme].string,\n        \n    }\n}\nexport default BuildThemeColors;\n","import BuildThemeColors from \"./colorsBuilder\"\n\n\nexport  function ThemeBuilder({colors={}}){\nreturn {\n    colors:BuildThemeColors(colors)\n}\n}\n","import { css } from \"styled-components\";\n\nconst bgColor=(theme,key)=>theme.colors&& theme.colors[key]?`background-color:${theme.colors[key]};`:'';\n\nexport const Primary=css`${({theme})=> bgColor(theme,'primaryBg')}`;\nexport const primaryContainer=css`${({theme})=> bgColor(theme,'primaryContainerBg')}`;\nexport const Secondary=css`${({theme})=> bgColor(theme,'secondaryBg')}`;\nexport const SecondaryContainer=css`${({theme})=> bgColor(theme,'secondaryContainerBg')}`;\nexport const Tertiary=css`${({theme})=> bgColor(theme,'tertiaryBg')}`;\nexport const TertiaryContainer=css`${({theme})=> bgColor(theme,'tertiaryContainerBg')}`;\nexport const Error=css`${({theme})=> bgColor(theme,'errorBg')}`;\nexport const ErrorContainer=css`${({theme})=> bgColor(theme,'errorContainerBg')}`;\nexport const Surface=css`${({theme})=> bgColor(theme,'surfaceBg')}`;\nexport const SurfaceDim=css`${({theme})=> bgColor(theme,'surfaceDimBg')}`;\nexport const SurfaceBright=css`${({theme})=> bgColor(theme,'surfaceBrightBg')}`;\nexport const SurfaceContainer=css`${({theme})=> bgColor(theme,'surfaceContainerBg')}`;\nexport const SurfaceContainerLowest=css`${({theme})=> bgColor(theme,'surfaceContainerLowestBg')}`;\nexport const SurfaceContainerLow=css`${({theme})=> bgColor(theme,'surfaceContainerLowBg')}`;\nexport const SurfaceContainerHighest=css`${({theme})=> bgColor(theme,'surfaceContainerHighestBg')}`;\nexport const SurfaceContaineHighr=css`${({theme})=> bgColor(theme,'surfaceContainerHighBg')}`;\n","import { css } from \"styled-components\";\n\nconst borderColor=(theme,key)=>theme.colors&& theme.colors[key]?`border-color:${theme.colors[key]};`:'';\n\nexport const Surface=css`${({theme})=> borderColor(theme,'surfaceBorderColor')}`;\nexport const SurfaceVariant=css`${({theme})=> borderColor(theme,'surfaceBorderColorVariant')}`;\n\n\n\n\n","import { css } from \"styled-components\";\n\n\n\nconst color=(theme,key)=>{\n    console.log(theme,key);\n    return theme.colors&& theme.colors[key]?`color:${theme.colors[key]};`:'';}\n\nexport const Primary=css`${({theme})=> color(theme,'primaryColor')}`;\nexport const PrimaryContainer=css`${({theme})=> color(theme,'primaryContainerColor')}`;\nexport const Secondary=css`${({theme})=> color(theme,'secondaryColor')}`;\nexport const SecondaryContainer=css`${({theme})=> color(theme,'secondaryContainerColor')}`;\nexport const Tertiary=css`${({theme})=> color(theme,'tertiaryColor')}`;\nexport const TertiaryContainer=css`${({theme})=> color(theme,'tertiaryContainerColor')}`;\nexport const Error=css`${({theme})=> color(theme,'errorColor')}`;\nexport const ErrorContainer=css`${({theme})=> color(theme,'errorContainerColor')}`;\nexport const Surface=css`${({theme})=> color(theme,'surfaceColor')}`;\nexport const SurfaceVariant=css`${({theme})=> color(theme,'surfaceColorVariant')}`;"],"names":["hslString","h","s","l","a","hslObject","string","values","HSLFromRGBValues","r","g","b","cmin","Math","min","cmax","max","delta","round","abs","toFixed","getAllHsls","color","startsWith","rgb","sep","indexOf","length","substr","split","percent","includes","replace","parseInt","rgbValues","console","log","rgbToHsl","hex","value","match","int","from","position","hexValues","hexToHsl","hsl","hslValues","Error","hsls","index","push","keyColor","level","lights","base","dark","light","on","container","BuildThemeColors","theme","primary","secondary","tertiary","error","surface","surfaceVariant","PRIMARY","SECONDARY","TERTIARY","ERROR","SURFACE","NeutralColor","variant","variantLights","dim","bright","outline","lowest","low","high","highest","primaryBg","primaryColor","primaryContainerBg","primaryContainerColor","secoondaryBg","secoondaryColor","secoondaryContainerBg","secoondaryContainerColor","tertiaryBg","tertiaryColor","tertiaryContainerBg","tertiaryContainerColor","ErrorBg","ErrorColor","ErrorContainerBg","ErrorContainerColor","surfaceBg","surfaceDimBg","surfaceBrighBg","surfaceColor","surfaceColorVariant","surfaceBorderColor","surfaceBorderColorVariant","surfaceContainerBg","surfaceContainerLowestBg","surfaceContainerLowBg","surfaceContainerHighBg","surfaceContainerHighestBg","colors","bgColor","key","css","_t","_","_t2","_t3","_t4","_t5","_t6","_t7","_t8","_t9","_t10","_t11","_t12","_t13","_t14","_t15","_t16","t","borderColor","Surface","SurfaceVariant"],"mappings":"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"}